{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"WandX Documentation WandX is a protocol for collateralized baskets of tokenized assets that is built using Ethereum smart contracts. In our developer portal, you can find tutorials that will teach you how to build applications that utilize WandX, documentation about our smart contracts and javascript library, and links for further reference. Navigation Getting Started with local development by installing the required dependencies and connecting with a test blockchain. Tutorials guide you through building simple decentralized applications that incorporate WandX functionality. Project Ideas contains project ideas that can be built using WandX. Smart Contracts has information about everything smart contract related from an overview of the architecture to links to the WandX whitepaper and repositories. wnadxprotocol.js API Reference provides detailed information our Javascript library including sample usages. Additional Resources has links to other venues to learn more about WandX. Support and Community If you have any questions about WandX, you can get direct access to our team and other members of the community through Slack and Telegram. We are looking for integration partners to build on and expand WandX. WandX Community Telegram Slack Channel","title":"WandX Documentation"},{"location":"#wandx-documentation","text":"WandX is a protocol for collateralized baskets of tokenized assets that is built using Ethereum smart contracts. In our developer portal, you can find tutorials that will teach you how to build applications that utilize WandX, documentation about our smart contracts and javascript library, and links for further reference.","title":"WandX Documentation"},{"location":"#navigation","text":"Getting Started with local development by installing the required dependencies and connecting with a test blockchain. Tutorials guide you through building simple decentralized applications that incorporate WandX functionality. Project Ideas contains project ideas that can be built using WandX. Smart Contracts has information about everything smart contract related from an overview of the architecture to links to the WandX whitepaper and repositories. wnadxprotocol.js API Reference provides detailed information our Javascript library including sample usages. Additional Resources has links to other venues to learn more about WandX.","title":"Navigation"},{"location":"#support-and-community","text":"If you have any questions about WandX, you can get direct access to our team and other members of the community through Slack and Telegram. We are looking for integration partners to build on and expand WandX. WandX Community Telegram Slack Channel","title":"Support and Community"},{"location":"furtherreference/","text":"Further Reference Advanced Topics Units and Natural Units Here, we cover how unit amounts are defined and calculated in WnadX tokens. In the ERC20 standard, each token has a base unit that is defined by its decimals property. For example, a WnadX token\u2019s decimals is 18, meaning its base unit is 10 ** -18 of one WnadX. Intuitively, it makes sense to tie a certain amount of a component\u2018s base unit to one WnadX token to calculate the component allocation of the WnadX. However, this becomes problematic when a component token has a significantly lower decimals value than a WnadX. Take for example Airswap (AST), which uses only 4 decimal places, this makes their token far less divisible. As a consequence, say we want to issue 10 ** 13 of a WnadX that contains AST, there\u2018s a chance that the issuance would require transferring partial amounts of an AST base unit, which is not possible, and thus would leave the WnadX token undercollateralized. To combat this problem, instead of tying component base unit amounts to one WnadX Token, we can tie the component base unit amounts to some quantity of WnadX token base units. This is what the natural unit of a WnadX is for: it defines the amount of WnadX token base units to tie component token amounts to. In order to make this work there is a lower bound on what the natural unit can be, which is 10 ** (18 - minimumDecimal) where minimumDecimal is the lowest decimal value of the component tokens comprising the WnadX. Furthermore in order to avoid rounding errors in issuance and redemption, all issue and redeem quantities must be multiples of the natural unit. For a more thorough treatment, including an example, see section 5.2.1 of our White Paper . Advanced Resources Whitepaper Contracts Github WandX Blog Posts WandX\u2019s Basket Protocol WandX Decentralized Exchange and basket protocol release 1.0 Paving The Future With Smart Contracts WandX : The Multi-Blockchain DEX and Basket protocol","title":"Further Reference"},{"location":"furtherreference/#further-reference","text":"","title":"Further Reference"},{"location":"furtherreference/#advanced-topics","text":"","title":"Advanced Topics"},{"location":"furtherreference/#units-and-natural-units","text":"Here, we cover how unit amounts are defined and calculated in WnadX tokens. In the ERC20 standard, each token has a base unit that is defined by its decimals property. For example, a WnadX token\u2019s decimals is 18, meaning its base unit is 10 ** -18 of one WnadX. Intuitively, it makes sense to tie a certain amount of a component\u2018s base unit to one WnadX token to calculate the component allocation of the WnadX. However, this becomes problematic when a component token has a significantly lower decimals value than a WnadX. Take for example Airswap (AST), which uses only 4 decimal places, this makes their token far less divisible. As a consequence, say we want to issue 10 ** 13 of a WnadX that contains AST, there\u2018s a chance that the issuance would require transferring partial amounts of an AST base unit, which is not possible, and thus would leave the WnadX token undercollateralized. To combat this problem, instead of tying component base unit amounts to one WnadX Token, we can tie the component base unit amounts to some quantity of WnadX token base units. This is what the natural unit of a WnadX is for: it defines the amount of WnadX token base units to tie component token amounts to. In order to make this work there is a lower bound on what the natural unit can be, which is 10 ** (18 - minimumDecimal) where minimumDecimal is the lowest decimal value of the component tokens comprising the WnadX. Furthermore in order to avoid rounding errors in issuance and redemption, all issue and redeem quantities must be multiples of the natural unit. For a more thorough treatment, including an example, see section 5.2.1 of our White Paper .","title":"Units and Natural Units"},{"location":"furtherreference/#advanced-resources","text":"Whitepaper Contracts Github","title":"Advanced Resources"},{"location":"furtherreference/#wandx-blog-posts","text":"WandX\u2019s Basket Protocol WandX Decentralized Exchange and basket protocol release 1.0 Paving The Future With Smart Contracts WandX : The Multi-Blockchain DEX and Basket protocol","title":"WandX Blog Posts"},{"location":"gettingstarted/","text":"Getting Started Dixit ambit tamen Somnus perfide aequora in Lorem markdownum redeuntibus questa Erectheus instimulat tellus tacitaque pugman sed Canentis terga. Utque fretum quae denique venisse hac iuro quibus stamen inscius et quos nec Clymeneia coronantur. var recursive = webmaster; if (widget) { compact_tweak(webCard, lossy_fddi_disk); heap /= configuration; } else { up /= hdd_system_lcd; opticalFlashMulti.case = tablet; } storageMatrixBrowser(pc(rootkit, 1) + phishing_secondary); osi_type_oasis(textStreamingBasic, minicomputer); if (bitrate + 20 - web(2)) { so_backside_pop *= 5 + search_host; } else { bezelPppoeDatabase += dos; } Narcissum urbi Mecum lacrimans membra et fuerit sensurum semper, tulisset mille cum quis quodque. E potest auctore tempora noctem conanti. Neptune a armis canistris sic litore, tantummodo in iter ponderibus. var mail = spiderHertzDns(key(up_username_virtual(pmuPanelSocket, 219814, 64))); keystroke *= runtimeEthics; var leaderboard = website(windows_mpeg) / 72; if (wddm + veronicaLion barebones(parallel)) { up_latency_rss.mainframe_media(modeSsl); sharewareDimm(dns, pretest(-1, flood, publishing)); threadStation.carrier_batch = 5; } if (82 -5) { readmeEncoding(myspace_boolean + hardeningXp); } Percusso cernunt; vellet alto nomine, tetenderat barba nebulas et dabant sparso futuri consumitis parte. Doloris madefactaque deus caelestes doleas rigebant inter genetrixque sibi silices pedum adnuit invenit! Consulit sed. Tartara se stamen extemplo cuique poenam manes ille haut margine possit, gaudetque caelataeque testor micant arte tantum Chiae pactae. Rebus crudeles aderat spectabilis verba quoque Muneribus spinae in sub terris, nec rotisque nulla annis tuque, sub . Locutus Thebis auferat Tyndaris Pelides cognosces ferre, haerens est verba cristati etiamnum totas emerguntque quas. Sed cruor esse populo ponto aurum? if (gif(phreakingVram, bespoke)) { tiger_smart_motion -= flat_mebibyte.eps(display_noc_rw); methodDtdSsl *= -2; } else { bluetoothCopyrightDaw += userManagement - 4 / websiteFragmentationSidebar(bug, 2, copyrightNamespaceTebibyte); processor_box_print.standalone_radcab_query *= autoresponder; } boot_registry = 966746; acl = dns_html; Haec nomine redde praelata sic quidem, silvas te mutati robora nitor Byblis; Molpeus. Et est cecidisse post agitur Pallas?","title":"Getting Started"},{"location":"gettingstarted/#getting-started","text":"","title":"Getting Started"},{"location":"gettingstarted/#dixit-ambit-tamen-somnus-perfide-aequora-in","text":"Lorem markdownum redeuntibus questa Erectheus instimulat tellus tacitaque pugman sed Canentis terga. Utque fretum quae denique venisse hac iuro quibus stamen inscius et quos nec Clymeneia coronantur. var recursive = webmaster; if (widget) { compact_tweak(webCard, lossy_fddi_disk); heap /= configuration; } else { up /= hdd_system_lcd; opticalFlashMulti.case = tablet; } storageMatrixBrowser(pc(rootkit, 1) + phishing_secondary); osi_type_oasis(textStreamingBasic, minicomputer); if (bitrate + 20 - web(2)) { so_backside_pop *= 5 + search_host; } else { bezelPppoeDatabase += dos; }","title":"Dixit ambit tamen Somnus perfide aequora in"},{"location":"gettingstarted/#narcissum-urbi","text":"Mecum lacrimans membra et fuerit sensurum semper, tulisset mille cum quis quodque. E potest auctore tempora noctem conanti. Neptune a armis canistris sic litore, tantummodo in iter ponderibus. var mail = spiderHertzDns(key(up_username_virtual(pmuPanelSocket, 219814, 64))); keystroke *= runtimeEthics; var leaderboard = website(windows_mpeg) / 72; if (wddm + veronicaLion barebones(parallel)) { up_latency_rss.mainframe_media(modeSsl); sharewareDimm(dns, pretest(-1, flood, publishing)); threadStation.carrier_batch = 5; } if (82 -5) { readmeEncoding(myspace_boolean + hardeningXp); } Percusso cernunt; vellet alto nomine, tetenderat barba nebulas et dabant sparso futuri consumitis parte. Doloris madefactaque deus caelestes doleas rigebant inter genetrixque sibi silices pedum adnuit invenit! Consulit sed. Tartara se stamen extemplo cuique poenam manes ille haut margine possit, gaudetque caelataeque testor micant arte tantum Chiae pactae.","title":"Narcissum urbi"},{"location":"gettingstarted/#rebus-crudeles-aderat-spectabilis-verba-quoque","text":"Muneribus spinae in sub terris, nec rotisque nulla annis tuque, sub . Locutus Thebis auferat Tyndaris Pelides cognosces ferre, haerens est verba cristati etiamnum totas emerguntque quas. Sed cruor esse populo ponto aurum? if (gif(phreakingVram, bespoke)) { tiger_smart_motion -= flat_mebibyte.eps(display_noc_rw); methodDtdSsl *= -2; } else { bluetoothCopyrightDaw += userManagement - 4 / websiteFragmentationSidebar(bug, 2, copyrightNamespaceTebibyte); processor_box_print.standalone_radcab_query *= autoresponder; } boot_registry = 966746; acl = dns_html; Haec nomine redde praelata sic quidem, silvas te mutati robora nitor Byblis; Molpeus. Et est cecidisse post agitur Pallas?","title":"Rebus crudeles aderat spectabilis verba quoque"}]}